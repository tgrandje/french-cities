name: test

on:
  push:
    tags-ignore:
      - v**
  pull_request:
    types: [opened, synchronize]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --without dev

      #----------------------------------------------
      # add pytest suite (not the full dev dependencies to avoid installing spyder)
      #----------------------------------------------
      - name: Add pytest pytest-cov genbadge[all] flake8 black
        run: poetry run pip install pytest pytest-cov genbadge[all] flake8 black

      - name: flake8 check & badge
        run: |
          poetry run flake8 --config .flake8 --output-file ./reports/flake8/flake8stats.txt
          poetry run genbadge flake8 -o ./badges/flake8-badge.svg

      - name: run black
        run: |
          poetry run black . --config pyproject.toml

      - name: Run tests and generate coverage badge
        run: |
          poetry run pytest --cov-config pyproject.toml --cov
          poetry run genbadge coverage -o ./badges/coverage-badge.svg

      - name: Commit changes
        continue-on-error: true
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "22030685+tgrandje@users.noreply.github.com"
          git add ./badges/flake8-badge.svg
          git add ./badges/coverage-badge.svg
          git commit -m "add badges"
          git push
